--Maestria en Ciencias (Mecatronica)
--Electronica Avanzada

--Registro Unviersal

--Declaracion de librerias
library ieee;
use ieee.std_logic_1164.all;

--Definicion de la entidad Registro Universa
entity RegistroUniversal is
generic(
	n : integer := 4	
	);
	port(
	RST : in  std_logic; 						--Reset 
	CLK : in  std_logic; 						--Reloj   
	R	: in  std_logic; 						--Entrada serial derecha
	L	: in  std_logic; 						--Entrada serial izquierda
	D	: in  std_logic_vector(n-1 downto 0); 	--Entrada en paralelo 
	OPC	: in  std_logic_vector(1 downto 0); 	--Modulo programable   
	QR	: out std_logic; 						--Salida serial derecha
	QL	: out std_logic; 						--Salida serial izquierda 
	Q	: out std_logic_vector(n-1 downto 0)  	--Cuenta
	);
end RegistroUniversal;

--Definicion de la arquitectura Universal de Registro Universal
architecture Universal of RegistroUniversal is
signal Qn, Qp: 	std_logic_vector(n-1 downto 0); --Estado de la maquina
begin
ParaleloSerie: process(Qp, L, R, D, OPC)
begin
	case OPC is
		when "00" =>
		Qn <= Qp;								--Mantiene el estado
		when "01" =>
		Qn <= D;								--Carga en paralelo
		when "10" =>
		Qn <= R & Qp(n-1 downto 1);				--Desplaza a la derecha
		when others =>									   
		Qn <= Qp(n-2 downto 0) & L;				--Desplaza a la izquierda
	end case;
	QR <= Qp(0);
	QL <= Qp(n-1);
	Q  <= Qp;
end process ParaleloSerie;
SerieParalelo: process(RST, CLK)
	begin
		if(RST='0') then
			Qp <= (others => '0'); 				--Iniciar en cero
		elsif (CLK'event and CLK='1') then
			Qp <= Qn;
		end if;
	end process SerieParalelo;
end Universal;

